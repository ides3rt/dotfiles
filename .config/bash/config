#!/usr/bin/env bash

#------------------------------------------------Aliases

## Prefered tool to exec as root
Auth='doas'

## My GitHub directories
GitHub="$HOME/GitHub/ides3rt/projects"
GistHub="$HOME/GitHub/ides3rt/gists"

## Verbosity
alias ln='ln -v'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
alias rmdir='rmdir -v'
alias mkdir='mkdir -v'
alias chown='chown -v'
alias chmod='chmod -v'

## SYNC
alias shutdown='sync && shutdown'
alias halt='sync && halt'
alias reboot='sync && reboot'
alias poweroff='sync && poweroff'
alias umount='sync && umount'

## LUKS
alias cplo="$Auth cryptsetup luksOpen"
alias cplc="$Auth cryptsetup luksClose"

## Git
alias add='git add'
alias checkout='git checkout'
alias pull='git pull'
alias commit='git commit'
alias merge='git merge'
alias branch='git branch'
alias push='git push'
alias diff='git diff' # Use `\diff` for coreutils' diff command
alias log='git log'
alias status='git status'
alias clone='git clone'

## GitHub
alias ghpcd="cd $GitHub"
alias gshcd="cd $GistHub"
alias ghsc="git --git-dir=$GitHub/Code/ --work-tree=$HOME/Code"
alias ghps="git --git-dir=$GitHub/Pictures/ --work-tree=$HOME/Pictures"

## Independent commands
alias yay='\mkdir -p /tmp/yay/abs; yay' # Require when set build-dir to /tmp
alias lfp='leafpad' # Type `leafpad` is too hard for me
alias ls='ls -hvF --color=auto --group-directories-first' # Minimal `ls`
alias pcc="$Auth pacman -Rnsc \$(pacman -Qtdq) && sync" # Remove `orphans` in Arch
alias grep='grep -sI --color=auto' # No errors when unreadable and colorful
alias media="cd /media/$USER/" # `cd` to /media
alias looks="cd /share/" # `cd` to share directory
alias mnt='cd /mnt' # `cd` to /mnt

unset GitHub GistHub Auth

#------------------------------------------------inputrc

### Remove everything that contain `vi` if you love `emacs`

set -o interactive-comments -o vi -o braceexpand \
	-o hashall -o histexpand +o monitor

shopt -s autocd cdspell checkwinsize cmdhist \
	dirspell expand_aliases extglob extquote \
	force_fignore histappend hostcomplete \
	interactive_comments lithist nocasematch progcomp \
	progcomp_alias promptvars xpg_echo

bind 'set bell-style none' 'set completion-ignore-case On' \
	'set colored-stats On' 'set echo-control-characters Off' \
	'set editing-mode vi' 'set keymap vi' 'set mark-symlinked-directories On' \
	'set page-completions Off' 'set print-completions-horizontally On' \
	'set show-all-if-ambiguous On' 'set show-all-if-unmodified On' \
	'set skip-completed-text On' 'set visible-stats On'

## Make `vi` better
bind -m vi-insert "\C-l":clear-display # Use `clear-screen` instead for non-recursive clear

## Use {j,k,l,;}
bind -m vi "j":backward-char
bind -m vi "k":next-history
bind -m vi "l":previous-history
bind -m vi ";":forward-char

## Remove h
bind -m vi -r "h"

#------------------------------------------------Functions

up(){
	# Only `cd ..` if nothing provide
	[ -z "$1" ] && cd .. && return 0

	# Only `cd ..` if alphabet provide
	! [[ "$1" =~ ^[0-9]+$ ]] && cd .. && return 0 # Will get errors if you port other shells

	# Remove start 0 to prevent errors
	local Number="${1#*0}"

	# ${VAR:-0} and ${VAR:-.} is require incase user provide 0
	while [ ${Number:-0} -gt 0 ]; do
		local Directories="../$Directories" && let Number--
	done
	cd ${Directories:-.}
}

share(){
	[ -z "$1" ] && return 1

	[ ! -e "$1" -o -h "$1" -o -c "$1" -o -b "$1" -o -S "$1" -o ! -O "$1" ] && return 1

	local FullPath="$(realpath $1)"
	local File="${FullPath#$HOME/}"; local File="/share/$USER/$File"

	if [ -d "$FullPath" ]; then
		[ -d "$File" ] || mkdir -p ${File%/*} >/dev/null

	else
		[ -d "${File%/*}" ] || mkdir -p ${File%/*} >/dev/null
	fi

	\ln -sv $FullPath $File
}

unshare(){
	[ -z "$1" ] && return 1

	[ -O "$1" ] || return 1

	local File="$(realpath $1)"; local File="${File#$HOME/}"
	local File="${File#/share/$USER/}"; local File="/share/$USER/$File"

	\unlink $File || return 1

	while [ "$File" != /share/$USER ]; do
		if [ -d "$File" ]; then
			\rmdir $File 2>/dev/null || return 0
		else
			\rmdir ${File%/*} 2>/dev/null || return 0
		fi
		local File="${File%/*}"
	done
}

lq(){
	# Currently you can't do search though URLs with `duckduckgo-lite`
	links -http.do-not-track 1 \
		-http.referer 0 \
		-save-url-history 0 \
		-save-cookies 0 https://lite.duckduckgo.com/lite/
}

lspkg(){
	# Only `ls /var/cache/pacman/pkg` if nothing provide
	if [ -z "$1" ]; then
		ls /var/cache/pacman/pkg/ | sed '/.sig$/d'
	else
		ls /var/cache/pacman/pkg/ | sed '/.sig$/d' | grep -Ei "$1"
	fi
}


#------------------------------------------------PS1-2

## NOTES
# \n = New Line
# \w = $PWD
# \W = Current directory
# \h = HostName
# \u = UserName
# \$ = Show '#' If root, Otherwise '$'

SetUp() {

### `tput`
local T_Black='\[$(tput setaf 16)\]';	local T_Red='\[$(tput setaf 196)\]'
local T_Green='\[$(tput setaf 46)\]';	local T_Yellow='\[$(tput setaf 226)\]'
local T_Blue='\[$(tput setaf 21)\]';	local T_Magenta='\[$(tput setaf 201)\]'
local T_Cyan='\[$(tput setaf 51)\]';	local T_White='\[$(tput setaf 231)\]'
local T_Reset='\[$(tput sgr0)\]'

### `ANSI escape code`
# Reset
local A_Reset='\[\e[0m\]'
# Normal
local A_Black='\[\e[30m\]';	local A_Red='\[\e[31m\]'
local A_Green='\[\e[32m\]';	local A_Yellow='\[\e[33m\]'
local A_Blue='\[\e[34m\]';	local A_Magenta='\[\e[35m\]'
local A_Cyan='\[\e[36m\]';	local A_White='\[\e[37m\]'
# Bold Normal
local BA_Black='\[\e[1;30m\]';	local BA_Red='\[\e[1;31m\]'
local BA_Green='\[\e[1;32m\]';	local BA_Yellow='\[\e[1;33m\]'
local BA_Blue='\[\e[1;34m\]';	local BA_Magenta='\[\e[1;35m\]'
local BA_Cyan='\[\e[1;36m\]';	local BA_White='\[\e[1;37m\]'
# Bright
local AB_Black='\[\e[90m\]';	local AB_Red='\[\e[91m\]'
local AB_Green='\[\e[92m\]';	local AB_Yellow='\[\e[93m\]'
local AB_Blue='\[\e[94m\]';		local AB_Magenta='\[\e[95m\]'
local AB_Cyan='\[\e[96m\]';		local AB_White='\[\e[97m\]'
# Bold Bright
local BAB_Black='\[\e[1;90m\]';	local BAB_Red='\[\e[1;91m\]'
local BAB_Green='\[\e[1;92m\]';	local BAB_Yellow='\[\e[1;93m\]'
local BAB_Blue='\[\e[1;94m\]';	local BAB_Magenta='\[\e[1;95m\]'
local BAB_Cyan='\[\e[1;96m\]';	local BAB_White='\[\e[1;97m\]'

### PS1
PS1="${T_White}->"
PS1+="${T_Reset} "

### PS2
PS2='   '

}

SetUp && unset SetUp
