#!/usr/bin/env bash

#------------------------------------------------Aliases

## Prefered tool to exec as root
[ $UID = 0 ] || Auth='doas'

## My GitHub directories
GitHub="$HOME/GitHub/ides3rt/projects"
GistHub="$HOME/GitHub/ides3rt/gists"

## Verbosity
alias ln='ln -v'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
alias rmdir='rmdir -v'
alias mkdir='mkdir -v'
alias chown='chown -v'
alias chmod='chmod -v'
alias mount='mount -v'
alias umount='umount -v'
alias fstrim='fstrim -v'

## LUKS
alias cplo="$Auth cryptsetup luksOpen"
alias cplc="$Auth cryptsetup luksClose"

## GitHub
alias ghpcd="cd $GitHub"
alias gshcd="cd $GistHub"
alias ghsc="git --git-dir=$GitHub/Code/ --work-tree=$HOME/Code"
alias ghps="git --git-dir=$GitHub/Pictures/ --work-tree=$HOME/Pictures"

## Independent commands
alias yay='\mkdir -p /tmp/yay/abs; yay' # Require when set build-dir to /tmp
alias ls='ls -hvFN --color=auto --group-directories-first' # Minimal `ls`
alias pcc="$Auth pacman -Rnsc \$(pacman -Qtdq) && sync" # Remove `orphans` in Arch
alias grep='grep -sI --color=auto' # No errors when unreadable and colorful
alias fgrep='grep -F' # `grep -F` is a replacement for `fgrep`
alias egrep='grep -E' # `grep -E` is a replacement for `egrep`
alias diff='diff --color=auto' # `diff` with colors is alots easier to read
alias media="cd /media/$USER/" # `cd` to /media
alias looks="cd /share/$USER/" # `cd` to share directory
alias mnt='cd /mnt' # `cd` to /mnt
alias doas='doas ' # Require if you want aliases to work with doas
alias htop="htop -t -u $USER" # It's so much cleaner

unset GitHub GistHub Auth

#------------------------------------------------inputrc

### Remove everything that contain `vi` if you love `emacs`

set -o interactive-comments -o vi -o braceexpand \
	-o hashall -o histexpand +o monitor

shopt -s autocd cdspell checkwinsize cmdhist \
	dirspell expand_aliases extglob extquote \
	force_fignore histappend hostcomplete \
	interactive_comments lithist nocasematch progcomp \
	progcomp_alias promptvars xpg_echo

bind 'set bell-style none' 'set completion-ignore-case On' \
	'set colored-stats On' 'set echo-control-characters Off' \
	'set editing-mode vi' 'set keymap vi' 'set mark-symlinked-directories On' \
	'set match-hidden-files Off' 'set page-completions Off' \
	'set print-completions-horizontally On' 'set show-all-if-ambiguous On' \
	'set show-all-if-unmodified On' 'set skip-completed-text On' \
	'set visible-stats On'

## Make `vi` better
bind -m vi-insert "\C-l":clear-display # Use `clear-screen` instead for non-recursive clear

## Remove h
bind -m vi -r "h"
bind -m vi -r "j"
bind -m vi -r "k"
bind -m vi -r "l"

## `dvorak` vi
bind -m vi "h":backward-char
bind -m vi "t":next-history
bind -m vi "n":previous-history
bind -m vi "s":forward-char

## Move fast
bind -m vi "H":vi-backward-word
bind -m vi "S":vi-forward-word

#------------------------------------------------Functions

up(){
	# Only `cd ..` if nothing provide
	[ -z "$1" ] && cd .. && return 0

	# Only `cd ..` if alphabet provide
	! [[ "$1" =~ ^[0-9]+$ ]] && cd .. && return 0 # Will get errors if you port other shells (BASHISM)

	# Remove start 0 to prevent errors
	local Number="${1#*0}"

	# ${VAR:-0} and ${VAR:-.} is require incase user provide 0
	while [ ${Number:-0} -gt 0 ]; do
		local Directories="../$Directories" && let Number--
	done
	cd ${Directories:-.}
}

share(){
	# Exit if nothing provide
	[ -z "$1" ] && return 1

	# If match those options(see my notes for info) then exit
	[ ! -e "$1" -o -h "$1" -o -c "$1" -o -b "$1" -o -S "$1" -o ! -O "$1" ] && return 1

	# Gets realpath
	local FullPath="$(realpath $1)"

	# Only allow `share` in $HOME dir
	[[ "$FullPath" =~ "$HOME" ]] || return 1 # This line is BASHISM

	local File="${FullPath#$HOME/}" # Remove starting /home/$USER/
	local File="/share/$USER/$File" # Gets path for share-dir

	# Use \COMMAND to prevent problems with alias
	[ -d "${File%/*}" ] || \mkdir -p ${File%/*} # Make dir if doesn't exist to simulate $HOME
	\ln -sv $FullPath $File
}

unshare(){
	# Exit if nothing provide
	[ -z "$1" ] && return 1

	# Only allows `unshare` when you are OWNER
	[ -O "$1" ] || return 1

	# Gets realpath
	local File="$(realpath $1)"

	# Only allow `unshare` in share-dir
	[[ "$File" =~ "/share/$USER" ]] || return 1 # This line is BASHISM

	local File="${File#$HOME/}" # Remove starting /home/$USER/
	local File="/share/$USER/$File" # Gets path for share-dir

	\unlink $File || return 1 # If `unlink` fails then exit

	# Remove directories that `share` create
	while [ "$File" != /share/$USER ]; do # Remove dir until nothing left
		\rmdir ${File%/*} 2>/dev/null || return 0 # If unwritable/has file(s) in that directory then exit
		local File="${File%/*}"
	done
}

lq(){
	# Currently you can't do search though URLs with `duckduckgo-lite`
	links -http.do-not-track 1 \
		-http.referer 0 \
		-save-url-history 0 \
		-save-cookies 0 https://lite.duckduckgo.com/lite/
}

lspkg(){ # Inspired by TFL/LL
	# Only `ls /var/cache/pacman/pkg` if nothing provide
	if [ -z "$1" ]; then
		ls /var/cache/pacman/pkg/ | sed '/.sig$/d'
	else
		ls /var/cache/pacman/pkg/ | sed '/.sig$/d' | grep -Ei "$1"
	fi
}


#------------------------------------------------PS1-2

## NOTES
# \n = New Line
# \w = $PWD
# \W = Current directory
# \h = HostName
# \u = UserName
# \$ = Show '#' If root, Otherwise '$'

SetUp() {

### `ANSI escape code`
# Reset
local Reset='\[\e[0m\]'
# Normal
local Black='\[\e[30m\]';	local Red='\[\e[31m\]'
local Green='\[\e[32m\]';	local Yellow='\[\e[33m\]'
local Blue='\[\e[34m\]';	local Magenta='\[\e[35m\]'
local Cyan='\[\e[36m\]';	local White='\[\e[37m\]'
# Bold Normal
local B_Black='\[\e[1;30m\]';	local B_Red='\[\e[1;31m\]'
local B_Green='\[\e[1;32m\]';	local B_Yellow='\[\e[1;33m\]'
local B_Blue='\[\e[1;34m\]';	local B_Magenta='\[\e[1;35m\]'
local B_Cyan='\[\e[1;36m\]';	local B_White='\[\e[1;37m\]'
# Light
local L_Black='\[\e[90m\]';	local L_Red='\[\e[91m\]'
local L_Green='\[\e[92m\]';	local L_Yellow='\[\e[93m\]'
local L_Blue='\[\e[94m\]';		local L_Magenta='\[\e[95m\]'
local L_Cyan='\[\e[96m\]';		local L_White='\[\e[97m\]'
# Bold Light
local BL_Black='\[\e[1;90m\]';	local BL_Red='\[\e[1;91m\]'
local BL_Green='\[\e[1;92m\]';	local BL_Yellow='\[\e[1;93m\]'
local BL_Blue='\[\e[1;94m\]';	local BL_Magenta='\[\e[1;95m\]'
local BL_Cyan='\[\e[1;96m\]';	local BL_White='\[\e[1;97m\]'

### PS1
if [ $UID = 0 ]; then
	PS1="${BL_Red}->"
	PS1+="${Reset} "
else
	PS1="${BL_White}->"
	PS1+="${Reset} "
fi

### PS2
PS2='   '

}

SetUp && unset SetUp
