#!/usr/bin/env bash

Err() {
	printf '%s\n' "Err: $2"
	(( $1 > 0 )) && return $1
}

up() {
	for ((Count = 10#${1:-1}; Count > 0; Count--)); {
		cd .. || break
	}
	unset -v Count
}

lspkg() { # [NAME] Inspired by TFL/LL
	for File in /var/cache/pacman/pkg/*; {
		[[ $File == *'.sig' ]] ||
			printf '%s\n' "${File#/var/cache/pacman/pkg/}"
	}
}

build() {
	# Check if AUR dir exist or not
	[[ -d $1 ]] || Err 1 "'$1' isn't a directory..."

	# Check if AUR up to date or not
	git --git-dir="${1%%/}"/.git pull || Err 1 "'$1' isn't a git directory..."

	# Set build dir
	local BuildDir="${TMPDIR:-/tmp}/build-$SRANDOM"

	# Copy AUR to build dir
	if cp -r "$1" "$BuildDir"; then
		# Build AUR
		{ cd "$BuildDir" && makepkg -sir ;} || Err 0 "Build '$1' failed..."
	else
		Err 0 "Copy '$1' to '$TMPDIR' failed..."
	fi

	# Clean
	cd "$OLDPWD" && rm -rf "$BuildDir"
}

log() {
	git --no-pager log --reverse --pretty=format:'%h: "%s"' "$@"
	printf '\n'
}
