#!/usr/bin/env bash

cp() { command cp -vn "$@"; }
mv() { command mv -vn "$@"; }
rm() { command rm -v --preserve-root=all "$@"; }

mkdir() { command mkdir -v "$@"; }
rmdir() { command rmdir -v "$@"; }

chmod() { command chmod -c --preserve-root "$@"; }
chown() { command chown -c --preserve-root "$@"; }

mount() { command mount -v "$@"; }
umount() { command umount -v "$@"; }

ln() { command ln -v "$@"; }

ls() {
	command ls -hFNT 0 --group-directories-first \
		--color=auto --hide=lost+found "$@"
}

grep() { command grep -I --color=auto "$@"; }

sd() { cd /media/"$USER"; }

up() {
	local i
	for (( i = 10#${1:-1}; i > 0; i-- )); {
		cd .. || break
	}
}

if type -P htop &>/dev/null; then
	htop() { command htop -t "$@"; }
fi

if type -P git &>/dev/null; then
	add() { git add "$@"; }
	branch() { git branch "$@"; }
	checkout() { git checkout "$@"; }
	commit() { git commit "$@"; }
	merge() { git merge "$@"; }
	pull() { git pull "$@"; }
	push() { git push "$@"; }
	restore() { git restore "$@"; }
	status() { git status -s "$@"; }

	show() {
		git --no-pager show --format='%h: %s' "$@"
	}

	log() {
		git --no-pager log --reverse --format='%h: "%s"' "$@"
	}

	ghpcd() { cd "$HOME"/GitHub/ides3rt/projects; }
	ghscd() { cd "$HOME"/GitHub/ides3rt/gists; }
fi

if type -P xclip &>/dev/null; then
	xclip() { command xclip -sel c "$@"; }

	ccb() {
		if type -P tmux &>/dev/null; then
			printf '' | tmux loadb -
		fi

		printf '' | command xclip -sel c
		printf '' | command xclip -sel p
	}
fi

if type -P yt-dlp &>/dev/null; then
	yt-dlp() {
		command yt-dlp -qwo '%(title)s.%(ext)s' \
			--downloader aria2c --progress "$@"
	}
fi

if type -P mpv &>/dev/null; then
	mpv() {
		command mpv --ytdl-raw-options=downloader=aria2c "$@"
	}
fi


if type -P links &>/dev/null; then
	links() {
		command links -http.fake-firefox 1 \
			-http.do-not-track 1 -html-numbered-links 1 "$@"
	}

	lq() { links https://lite.duckduckgo.com/lite/?q="$*"; }
fi

if type -P sl &>/dev/null; then
	sl() { command sl -edF "$@"; }
fi
